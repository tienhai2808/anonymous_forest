services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=anonymous_forest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
  
  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server --requirepass password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    environment:
      - ENV=production
      - MONGO_URI=mongodb://admin:password@mongodb:27017
      - MONGO_DB=anonymous_forest
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=password
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/backend/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=/backend/api
        - NEXT_PUBLIC_BASE_URL=http://localhost
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/backend/api
      - NEXT_PUBLIC_BASE_URL=http://localhost
    networks:
      - app-network 
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
  
  nginx:
    image: nginx:alpine 
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
  
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
